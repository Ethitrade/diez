#!/usr/bin/env node
const { Log, isMacOS } = require('@diez/cli-core');
const { locateBinaryMacOS } = require('@diez/sources');
const { fork, execSync } = require('child_process');
const { join, resolve } = require('path');

const cwd = resolve(__dirname, '..');

const target = process.argv.pop();
const start = fork('./scripts/start', [target], { stdio: 'inherit' });

start.once('message', () => {
  Log.comment(`
Starting example ${target} project...`);
  switch (target) {
    case 'android':
      if (isMacOS() && locateBinaryMacOS('com.google.android.studio')) {
        return execSync(`open -b com.google.android.studio examples/android`, { cwd });
      }
      return Log.comment(`Open ${join('examples', 'android')} in Android Studio to run the example project.`);
    case 'ios':
      if (isMacOS() && locateBinaryMacOS('com.apple.dt.Xcode')) {
        return execSync(`open examples/ios/PoodleSurf.xcworkspace`, { cwd });
      }
      return Log.comment(`Open ${join('examples', 'ios', 'PoodleSurf.xcworkspace')} in Xcode to run the example project.`);
    case 'web':
      return fork(
        './node_modules/.bin/react-app-rewired',
        ['start'],
        { cwd: join(cwd, 'examples', 'web'), stdio: 'inherit' },
      );
  }
});

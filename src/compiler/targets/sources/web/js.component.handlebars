class {{{componentName}}} {
  constructor({
{{#if singleton}}
{{#each properties}}
    {{{@key}}} = {{{this.initializer}}}{{#unless @last}},{{/unless}}
{{/each}}
  } = {}) {
{{else}}
{{#each properties}}
    {{{@key}}}{{#unless @last}},{{/unless}}
{{/each}}
  }) {
{{/if}}
{{#each properties}}
{{#if this.isPrimitive}}
    this.{{{@key}}} = {{{@key}}};
{{else if this.depth}}
    {{#list @key this}}{{/list}}
{{else}}
    this.{{{@key}}} = new {{{this.type}}}({{{@key}}});
{{/if}}
{{/each}}
  }
}

{{#if public}}
Object.defineProperty({{{componentName}}}, 'name', {value: '{{{componentName}}}'});
{{/if}}

module.exports.{{{componentName}}} = {{{componentName}}};
